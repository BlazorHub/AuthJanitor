@inherits LayoutComponentBase

<div class="app-main">
    @* --- Main Navbar Area --- *@
    <nav class="navbar navbar-expand-sm navbar-light bg-light border border-bottom shadow-sm">

        @* --- Navbar Visibility Toggle --- *@
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainNavbar">
            <span class="navbar-toggler-icon"></span>
        </button>

        @* --- Branding --- *@
        <a href="/" class="navbar-brand">AuthJanitor</a>

        @* --- Navbar Area Content--- *@
        <div class="navbar-collapse collapse justify-content-stretch" id="mainNavbar">

            @* --- Navigation --- *@
            <ul class="navbar-nav">
                @* --- "Manage" Menu --- *@
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarManageDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fa fa-sitemap mr-3"></i>Manage
                    </a>
                    <div class="dropdown-menu dropdown-menu-left" aria-labelledby="navbarManageDropdown">
                        <a class="dropdown-item" href="/dashboard"><i class="fa fa-tachometer-alt mr-3"></i>Dashboard</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/resources"><i class="fa fa-database mr-3"></i>Resources</a>
                        <a class="dropdown-item" href="/managedSecrets"><i class="fa fa-key mr-3"></i>Secrets</a>
                        <a class="dropdown-item" href="/rekeyingTasks"><i class="fa fa-tasks mr-3"></i>Rekeying Tasks</a>
                    </div>
                </li>
                @* --- "System" Menu --- *@
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarSystemDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fa fa-wrench mr-3"></i>System
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarSystemDropdown">
                        <a class="dropdown-item" href="/accessManagement"><i class="fa fa-users mr-3"></i>Access Management</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/providers"><i class="fa fa-plug mr-3"></i>Providers</a>
                        <a class="dropdown-item" href="/integrityReports"><i class="fa fa-clipboard-check mr-3"></i>Integrity Reports</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item disabled" href="/configuration"><i class="fa fa-cogs mr-3"></i>System Configuration</a>
                    </div>
                </li>
            </ul>

            @* --- Search Bar --- *@
            <form class="mx-2 my-auto d-inline w-100">
                @*<div class="input-group">
                        <input type="text" class="form-control" placeholder="...">
                        <span class="input-group-btn">
                            <button class="btn" type="button"><i class="fa fa-search"></i></button>
                        </span>
                    </div>*@
            </form>

            @* --- User Preferences Menu (Avatar Icon) --- *@
            <ul class="navbar-nav">
                <li class="nav-item dropdown">
                    <a class="nav-link p-0" id="navbarUserDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <img src="@GetGravatar()" style="height:2.5em;width:2.5em;" class="rounded-circle shadow-sm" />
                        <div class="d-block d-sm-none mr-4 float-left">
                            <div class="font-weight-bold">@Metrics.SignedInName</div>
                            <div class="small">@Metrics.SignedInRoles</div>
                        </div>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarUserDropdown">
                        <div class="px-4 py-2 mb-2 bg-secondary text-light d-none d-sm-block">
                            <div class="row">
                                <div class="col col-2 my-auto">
                                    <i class="fa fa-user"></i>
                                </div>
                                <div class="col col-10">
                                    <div class="font-weight-bold">@Metrics.SignedInName</div>
                                    <div class="small">@Metrics.SignedInRoles</div>
                                </div>
                            </div>
                        </div>
                        <a class="dropdown-item disabled" href="#"><i class="fa fa-paint-roller mr-3"></i>UI Theme</a>
                        <a class="dropdown-item disabled" href="#"><i class="fa fa-flag-checkered mr-3"></i>Notification Settings</a>
                        <a class="dropdown-item disabled" href="#"><i class="fa fa-undo mr-3"></i>Reset UI Preferences</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/.auth/logout"><i class="fa fa-sign-out-alt mr-3"></i>Log Out</a>
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    @* --- Content Area --- *@
    <div class="container-fluid p-0" style="position:relative;">
        @Body
    </div>

    @* --- Footer Area --- *@
    <footer class="footer border border-top d-none d-sm-block">
        <div class="container-fluid">
            <div class="row my-auto">
                <div class="col px-3 my-auto text-left text-muted small">Powered by <a href="https://www.authjanitor.com" class="text-muted" target="_blank">AuthJanitor</a></div>
                <div class="col px-1 text-right">
                    <div class="float-right pt-1 px-2 border-left">
                        <a href="javascript:false;" data-toggle="toggle" role="button" data-target="#helpContainer" class="text-decoration-none px-1">
                            <i class="fa fa-question-circle text-info"></i>
                        </a>
                        <a href="https://github.com/microsoft/AuthJanitor" target="_blank" class="text-decoration-none px-1">
                            <i class="fab fa-github text-dark"></i>
                        </a>
                        <a href="https://github.com/microsoft/AuthJanitor/wiki" target="_blank" class="text-decoration-none px-1">
                            <i class="fa fa-book-open text-dark"></i>
                        </a>
                    </div>
                    <div class="float-right pt-1 px-2 border-left">
                        <a href="" @onclick="@(() => StateHasChanged())" @onclick:preventDefault title="Refresh Page Data">
                            <i class="fa fa-sync-alt text-info"></i>
                        </a>
                    </div>
                    <div class="float-right mr-2">
                        @if (Metrics.TasksInError > 0)
                        {
            <a class="btn btn-sm btn-outline-danger mx-2" role="button" href="/rekeyingTasks">
                Errors <span class="badge badge-danger">@Metrics.TasksInError</span>
                <span class="sr-only">in rekeying tasks</span>
            </a>}
                        @if (Metrics.TotalPendingApproval > 0)
                        {
            <a class="btn btn-sm btn-outline-success mx-2" role="button" href="/rekeyingTasks">
                Approvals <span class="badge badge-success">@Metrics.TotalPendingApproval</span>
                <span class="sr-only">for pending rekeying tasks</span>
            </a>}
                    </div>
                </div>
            </div>
        </div>
    </footer>
</div>

@using System.Security.Cryptography
@using System.Text
@inject IJSRuntime JSRuntime
@code
{ protected DashboardMetricsViewModel Metrics { get; set; } = new DashboardMetricsViewModel();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("InitializeHelpSlideIn");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Metrics = await Http.AJGet<DashboardMetricsViewModel>();
    }

    protected string GetGravatar()
    {
        if (Metrics == null || string.IsNullOrEmpty(Metrics.SignedInEmail))
            return string.Empty;
        return $"https://www.gravatar.com/avatar/{MD5Hash(Metrics.SignedInEmail)}.jpg";
    }

    private static string MD5Hash(string input)
    {
        // This is *not* FIPS-compliant
        StringBuilder hash = new StringBuilder();
        byte[] bytes = MD5.Create().ComputeHash(new UTF8Encoding().GetBytes(input));

        for (int i = 0; i < bytes.Length; i++)
        {
            hash.Append(bytes[i].ToString("x2"));
        }
        return hash.ToString();
    } }