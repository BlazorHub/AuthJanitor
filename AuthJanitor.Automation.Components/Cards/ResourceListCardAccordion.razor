<Accordion>
    @if (ConfigurationReady)
    {
    @foreach (var resource in Resources)
    {
        <Card>
            <CardHeader>
                <Button Clicked="@(() => Visibilities[resource.ObjectId] = !Visibilities[resource.ObjectId])">
                    <ResourceNameStyled Value="@resource" />
                </Button>
                <RiskScoreBadge Value="@resource.RiskScore" Float="Float.Right" Class="mt-2" />
            </CardHeader>
            <Collapse IsOpen="@Visibilities[resource.ObjectId]">
                <CardBody Padding="Padding.Is2.OnAll">
                    <Container IsFluid="true">
                        <Row>
                            <Column Margin="Margin.Is1.OnY" ColumnSize="ColumnSize.Is12">
                                <ProviderSettingsCard ProviderConfiguration="@ProviderConfigurations[resource.ObjectId]" ShowEditControls="false" />
                            </Column>
                        </Row>
                        <Row>
                            <Column Margin="Margin.Is1.OnY" ColumnSize="ColumnSize.Is6.OnDesktop.Is12">
                                <RiskListCard Risks="@resource.Risks" />
                            </Column>
                            <Column Margin="Margin.Is1.OnY" ColumnSize="ColumnSize.Is6.OnDesktop.Is12">
                                <ActionDescriptionCard Description="@resource.RuntimeDescription" />
                            </Column>
                        </Row>
                    </Container>
                </CardBody>
            </Collapse>
        </Card>
    }
    }
</Accordion>

@using AuthJanitor.Automation.Components.Common.Resources
@using AuthJanitor.Automation.Components.Common.Risks
@code {
    protected Dictionary<Guid, bool> Visibilities { get; set; } = new Dictionary<Guid, bool>();
    protected Dictionary<Guid, ProviderConfigurationViewModel> ProviderConfigurations { get; set; } = new Dictionary<Guid, ProviderConfigurationViewModel>();

    [Parameter]
    public IEnumerable<ResourceViewModel> Resources { get; set; } = new List<ResourceViewModel>();

    protected bool ConfigurationReady { get; set; } = false;

    protected override void OnParametersSet()
    {
        foreach (var r in Resources)
        {
            Visibilities[r.ObjectId] = false;
            ProviderConfigurations[r.ObjectId] = new ProviderConfigurationViewModel();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.WhenAll(Resources.Select(async r =>
        {
            Visibilities[r.ObjectId] = false;
            var providerConfiguration = await Http.AJGet<ProviderConfigurationViewModel>(r.ProviderType);
            ProviderConfigurations[r.ObjectId].ConfigurationItems = providerConfiguration.ConfigurationItems;
            ProviderConfigurations[r.ObjectId].SerializedConfiguration = r.SerializedProviderConfiguration;
        })).ContinueWith(t => ConfigurationReady = true);
    }
}
