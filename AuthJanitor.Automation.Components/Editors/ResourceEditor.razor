<Container>
    <Row>
        <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
            <FieldLabel ColumnSize="ColumnSize.Is4">Name</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is8">
                <TextEdit @bind-Text="@Value.Name" Placeholder="Resource name..." />
            </FieldBody>
        </Field>
    </Row>
    <Row>
        <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
            <FieldLabel ColumnSize="ColumnSize.Is4">Description</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is8">
                <TextEdit @bind-Text="@Value.Description" Placeholder="Resource description..." />
            </FieldBody>
        </Field>
    </Row>
    <Row>
        <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
            <FieldLabel ColumnSize="ColumnSize.Is4">Provider</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is8">
                <ProviderSelector Value="@Value.ProviderType" ValueChanged="ProviderTypeChanged" />
            </FieldBody>
        </Field>
    </Row>
</Container>
@if (ProviderConfiguration != null &&
    ProviderConfiguration.ConfigurationItems != null &&
    ProviderConfiguration.ConfigurationItems.Any())
{
    <Container Class="hasSectionHeader">
        <span class="sectionHeader">Provider Settings</span>
        <Row>
            <ConfigurationVisualizer @bind-Value="@ProviderConfiguration"
                                      ShowEditControls="true" />
        </Row>
    </Container>
}

@using AuthJanitor.Automation.Components.Common.Providers
@code {
    [Parameter]
    public ResourceViewModel Value { get; set; } = new ResourceViewModel();

    [Parameter]
    public EventCallback<ResourceViewModel> ValueChanged { get; set; }

    public ProviderConfigurationViewModel ProviderConfiguration { get; set; }

    protected async Task ProviderTypeChanged(string providerType)
    {
        Value.ProviderType = providerType;
        ProviderConfiguration = await Http.AJGet<ProviderConfigurationViewModel>(providerType);
    }
}